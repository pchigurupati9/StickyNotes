server.servlet.context-parameters.appl_id=FPL
server.servlet.context-parameters.appl_na=codefest-sticky-notes-rest
server.servlet.context-parameters.appl_ver=1.0.0

management.endpoints.web.exposure.include=info,health,loggers

#server.port=9000

## primary datasource
spring.data.mongodb.uri=mongodb+srv://CodeFest:Fest1%212%403%234%24@codefest.mg69s.mongodb.net/

## Set min/max database pools & idle timeout for primary datasource
#spring.datasource.hikari.maximum-pool-size=${hikari_maximum_pool_size:16}
#spring.datasource.hikari.minimum-idle=${hikari_minimum_pool_size:2}
#spring.datasource.hikari.idle-timeout=${hikari_idle_timeout:30000}
#
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DB2390Dialect
#spring.jpa.generate-ddl=false
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.show-sql=false

# Configuration for ThreadPoolTaskExecutor that runs tasks in parallel
# how long the thread will block when the container is shutdown.
general.thread.await-term-secs=5
# this many theads can be created before adding anything to the queue
general.thread.core-pool-size=200
# threads created in addition to the core pool will wait this long to close after running out of tasks
general.thread.keep-alive-secs=120
# the maximum number of threads
general.thread.max-pool-size=400
# this many tasks will be queued before creating more threads.  If the que is full and all threads
#  are working and a new task is queued, the calling thread will be used to run the new task
# Disable queue to prevent deadlock
general.thread.queue-capacity=0
